openapi: 3.0.2
servers:
  - description: API
    url: 'http://89.108.102.170/api'
info:
  title: pockets
  version: 0.1.0
tags:
  - name: auth
    description: Auth namespace
  - name: users
    description: Users namespace
  - name: pockets
    description: Pockets namespace
  - name: transactions
    description: Transaction namespace
  - name: categories
    description: Category namespace
  - name: goals
    description: Goal namespace
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Registration
      requestBody:
        $ref: '#/components/requestBodies/RegistrationRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/Registration201'
        '400':
          $ref: '#/components/responses/Registration400'
      x-stoplight:
        id: 0rvgd858oxdpp
    parameters: []
  /auth/token:
    post:
      tags:
        - auth
      summary: Obtain tokens pair
      requestBody:
        $ref: '#/components/requestBodies/TokenObtainRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/TokenObtain200'
        '400':
          $ref: '#/components/responses/TokenObtain400'
      x-stoplight:
        id: br8nj4n8ywulv
    parameters: []
  /auth/token/refresh:
    post:
      tags:
        - auth
      summary: Obtain tokens pair
      requestBody:
        $ref: '#/components/requestBodies/TokenRefreshRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/TokenObtain200'
        '400':
          $ref: '#/components/responses/TokenRefresh400'
      x-stoplight:
        id: 1dbm82kkk12sc
    parameters: []
  /users/me:
    get:
      tags:
        - users
      summary: User info
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/UsersMe200'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /pockets/transactions:
    get:
      tags:
        - pockets
        - transactions
      summary: Transactions list
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: number
          required: false
        - in: query
          name: offset
          schema:
            type: number
          required: false
        - schema:
            type: string
          in: query
          name: order_by
      responses:
        '200':
          $ref: '#/components/responses/TransactionsList200'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - pockets
        - transactions
      summary: Transaction Create
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/TransactionCreateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/Transactions200'
        '400':
          $ref: '#/components/responses/TransactionCreate400'
        '401':
          $ref: '#/components/responses/Unauthorized'
      x-stoplight:
        id: 8hwjjhrvtf6qc
    parameters: []
  '/pockets/transactions/{transaction_id}':
    get:
      tags:
        - pockets
        - transactions
      summary: Transaction retrieve
      parameters:
        - name: transaction_id
          in: path
          schema:
            type: number
          required: true
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/Transactions200'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          description: Not Found
      x-stoplight:
        id: fbk9w3hdgnl44
    put:
      tags:
        - pockets
        - transactions
      summary: Transaction update
      parameters:
        - name: transaction_id
          in: path
          schema:
            type: number
          required: true
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/TransactionCreateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/Transactions200'
        '400':
          $ref: '#/components/responses/TransactionCreate400'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          description: Not Found
      x-stoplight:
        id: gfthpybx5usqg
    patch:
      tags:
        - pockets
        - transactions
      summary: Transaction partial update
      parameters:
        - name: transaction_id
          in: path
          schema:
            type: number
          required: true
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/TransactionCreateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/Transactions200'
        '400':
          $ref: '#/components/responses/TransactionCreate400'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          description: Not Found
      x-stoplight:
        id: j5npe9zjv20b9
    delete:
      tags:
        - pockets
        - transactions
      summary: Transaction delete
      parameters:
        - name: transaction_id
          in: path
          schema:
            type: number
          required: true
      security:
        - bearerAuth: []
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          description: Not Found
      x-stoplight:
        id: p8lph8esfocp6
    parameters:
      - schema:
          type: string
        name: transaction_id
        in: path
        required: true
  /pockets/transactions/total:
    get:
      tags:
        - pockets
        - transactions
      summary: Transactions global
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/TransactionGlobal200'
        '401':
          $ref: '#/components/responses/Unauthorized'
      x-stoplight:
        id: h8zar1zq8smhw
    parameters: []
  /pockets/transactions/balance:
    get:
      tags:
        - pockets
        - transactions
      summary: Balance
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/TransactionBalance200'
        '401':
          $ref: '#/components/responses/Unauthorized'
      x-stoplight:
        id: 0te1vruwbdtd3
    parameters: []
  /pockets/categories:
    get:
      tags:
        - pockets
        - categories
      summary: Categories list
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/CategoriesWithExpensesList200'
        '401':
          $ref: '#/components/responses/Unauthorized'
      parameters:
        - schema:
            type: string
          in: query
          name: order_by
        - in: query
          name: limit
          schema:
            type: number
          required: false
        - in: query
          name: offset
          schema:
            type: number
          required: false
      x-stoplight:
        id: 01pes30m24axw
    post:
      tags:
        - pockets
        - categories
      summary: Category create
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/CategoryCreateRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/Categories200'
        '400':
          $ref: '#/components/responses/CategoryCreate400'
        '401':
          $ref: '#/components/responses/Unauthorized'
      x-stoplight:
        id: u5jnnghzcw4aa
    parameters: []
  '/pockets/categories/{category_id}':
    get:
      tags:
        - pockets
        - categories
      summary: Category retrieve
      security:
        - bearerAuth: []
      parameters:
        - name: category_id
          in: path
          schema:
            type: number
          required: true
      responses:
        '200':
          $ref: '#/components/responses/CategoryWithExpenses200'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          description: Not Found
      x-stoplight:
        id: mi9518kuf4k5i
    put:
      tags:
        - pockets
        - categories
      summary: Category update
      security:
        - bearerAuth: []
      parameters:
        - name: category_id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        $ref: '#/components/requestBodies/CategoryCreateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CategoriesList200'
        '400':
          $ref: '#/components/responses/CategoryCreate400'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          description: Not Found
      x-stoplight:
        id: yc54prwtsbu8t
    patch:
      tags:
        - pockets
        - categories
      summary: Category partial update
      security:
        - bearerAuth: []
      parameters:
        - name: category_id
          in: path
          schema:
            type: number
          required: true
      requestBody:
        $ref: '#/components/requestBodies/CategoryCreateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/CategoriesList200'
        '400':
          $ref: '#/components/responses/CategoryCreate400'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          description: Not Found
      x-stoplight:
        id: r1lgmfqfibhh1
    delete:
      tags:
        - pockets
        - categories
      summary: Category delete
      security:
        - bearerAuth: []
      parameters:
        - name: category_id
          in: path
          schema:
            type: number
          required: true
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          description: Not Found
      x-stoplight:
        id: ikx3zhlmo5w60
    parameters:
      - schema:
          type: string
        name: category_id
        in: path
        required: true
  /pockets/categories/top:
    get:
      tags:
        - pockets
        - categories
      summary: Categories top
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/TopCategories200'
        '401':
          $ref: '#/components/responses/Unauthorized'
      x-stoplight:
        id: v2f7a2pdfjyzj
    parameters: []
  /api/goals/:
    get:
      summary: Goals list
      tags:
        - goals
      responses:
        '200':
          $ref: '#/components/responses/GoalsList200'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      operationId: get-pockets-goals
      parameters:
        - schema:
            type: string
          in: query
          name: order_by
        - in: query
          name: limit
          schema:
            type: number
          required: false
        - in: query
          name: offset
          schema:
            type: number
          required: false
      security:
        - bearerAuth: []
      x-stoplight:
        id: wxk4xxa7afvfh
    post:
      summary: Goal create
      operationId: post-pockets-transactions-goals
      responses:
        '201':
          $ref: '#/components/responses/GoalWithout200'
        '400':
          $ref: '#/components/responses/GoalsCreate400'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      tags:
        - goals
      description: ''
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/GoalCreateRequestBody'
      x-stoplight:
        id: i0z3ga1ztu4f5
    parameters: []
  '/api/goals/{goal_id}':
    parameters:
      - schema:
          type: string
        name: goal_id
        in: path
        required: true
    get:
      summary: Goal retrieve
      tags:
        - goals
      responses:
        '200':
          $ref: '#/components/responses/Goals200'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          description: Not Found
      operationId: get-pockets-goals-goal_id
      security:
        - bearerAuth: []
      x-stoplight:
        id: elwgdio2cf64a
    put:
      summary: Goal update
      operationId: put-pockets-goals-goal_id
      responses:
        '200':
          $ref: '#/components/responses/GoalWithout200'
        '400':
          $ref: '#/components/responses/GoalsCreate400'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          description: Not Found
      tags:
        - goals
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/GoalCreateRequestBody'
      x-stoplight:
        id: 7b24215325xm4
    patch:
      summary: Goal partial_update
      operationId: patch-pockets-goals-goal_id
      responses:
        '200':
          $ref: '#/components/responses/GoalWithout200'
        '400':
          $ref: '#/components/responses/GoalsCreate400'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
        '404':
          description: Not Found
      tags:
        - goals
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/GoalCreateRequestBody'
      x-stoplight:
        id: 226w9ww0z8zan
    delete:
      summary: Goal destroy
      operationId: delete-pockets-goals-goal_id
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      tags:
        - goals
      security:
        - bearerAuth: []
      x-stoplight:
        id: i862p084qx593
  /api/goals/refill:
    post:
      summary: Пополнение цели
      operationId: post-goals-refill
      responses:
        '200':
          $ref: '#/components/responses/GoalRefill200'
        '400':
          $ref: '#/components/responses/GoalRefill400'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      tags:
        - goals
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalRefill'
        description: ''
      x-stoplight:
        id: rqavmonhop1om
    parameters: []
  '/api/goals/{goal_id}/complete':
    parameters:
      - schema:
          type: string
        name: goal_id
        in: path
        required: true
    patch:
      summary: Завершение цели
      operationId: patch-goals-complete
      responses:
        '200':
          $ref: '#/components/responses/Goals200'
        '400':
          $ref: '#/components/responses/GoalComplete400'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      tags:
        - goals
      description: ''
      requestBody:
        content: {}
      x-stoplight:
        id: 2aqgzsr57ydlx
  /goals/analyze:
    get:
      summary: Goals analyze
      tags:
        - goals
      responses:
        '200':
          $ref: '#/components/responses/GoalAnalyze200'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      operationId: get-goals-analyze
      x-stoplight:
        id: ljm5vnby6uq17
      security:
        - bearerAuth: []
  /api/goals/dashboard:
    get:
      summary: Goals dashboard
      tags:
        - goals
      responses:
        '200':
          $ref: '#/components/responses/GoalDashboard200'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      operationId: get-api-goals-dashboard
      x-stoplight:
        id: z7i37fkqfclwm
      security:
        - bearerAuth: []
  /api/goals/top:
    get:
      summary: Top goals
      tags:
        - goals
      responses:
        '200':
          $ref: '#/components/responses/GoalTop200'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      operationId: get-api-goals-top
      x-stoplight:
        id: 9i6d86oy7ic95
      security:
        - bearerAuth: []
  /api/pockets/transactions/export:
    get:
      summary: Export operations
      tags:
        - transactions
      responses:
        '200':
          description: ''
          content:
            multipart/form-data:
              schema:
                type: object
                properties:
                  file:
                    type: string
                    x-stoplight:
                      id: 900ucl3vpkzlt
                    format: byte
            application/xml:
              schema:
                type: object
                properties: {}
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      operationId: get-api-pockets-transactions-export
      x-stoplight:
        id: dckbz0wesqpys
      description: ''
      security:
        - bearerAuth: []
  /api/pockets/transactions/import:
    post:
      summary: Import operations
      operationId: post-api-pockets-transactions-import
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/PermissionDenied'
      x-stoplight:
        id: byapf4e1gx82o
      tags:
        - transactions
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Decimal:
      type: string
      example: '1000.00'
    CategoryCreate:
      type: object
      properties:
        name:
          type: string
    CategoryBase:
      allOf:
        - type: object
          properties:
            id:
              type: number
        - $ref: '#/components/schemas/CategoryCreate'
    CategoryWithExpensesSums:
      allOf:
        - $ref: '#/components/schemas/CategoryBase'
        - type: object
          properties:
            transactions_sum:
              $ref: '#/components/schemas/Decimal'
    TransactionRetrieve:
      type: object
      properties:
        id:
          type: number
        category:
          $ref: '#/components/schemas/CategoryBase'
        transaction_date:
          type: string
          format: date
        amount:
          $ref: '#/components/schemas/Decimal'
        transaction_type:
          enum:
            - income
            - expense
    GoalRetrieve:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        target_amount:
          $ref: '#/components/schemas/Decimal'
        start_amount:
          $ref: '#/components/schemas/Decimal'
        category:
          $ref: '#/components/schemas/CategoryBase'
        term:
          type: integer
        percent:
          type: integer
        is_completed:
          type: boolean
        created_at:
          type: string
          x-stoplight:
            id: ivxp51zbz57k4
          format: date
        expire_date:
          type: string
          x-stoplight:
            id: 4ga7nbn3j7h5q
          format: date
        days_to_goal:
          type: integer
          x-stoplight:
            id: m0b0e6ncuxfna
          minimum: 0
        accumulated_amount:
          $ref: '#/components/schemas/Decimal'
        accumulated_amount_cur_month:
          $ref: '#/components/schemas/Decimal'
      title: ''
    GoalRefill:
      title: GoalRefill
      type: object
      properties:
        goal:
          type: integer
        amount:
          $ref: '#/components/schemas/Decimal'
    GoalCreate:
      type: object
      properties:
        name:
          type: string
        target_amount:
          $ref: '#/components/schemas/Decimal'
        start_amount:
          $ref: '#/components/schemas/Decimal'
        category:
          type: integer
        term:
          type: integer
        percent:
          type: integer
          minimum: 0
          maximum: 100
    TransactionCreate:
      title: TransactionCreate
      x-stoplight:
        id: yogvbdaz7yxp3
      type: object
      properties:
        category:
          type: integer
        transaction_date:
          type: string
          x-stoplight:
            id: s8xnsoa1g6ygt
          format: date
        amount:
          $ref: '#/components/schemas/Decimal'
        transaction_type:
          x-stoplight:
            id: aef8byqdptkup
          enum:
            - income
            - expense
    Category:
      title: Category
      x-stoplight:
        id: jtmwdmee2nuxu
      type: object
      properties:
        id:
          type: integer
          x-stoplight:
            id: qrw1poauj1nme
    GoalWithout:
      title: GoalWithout
      x-stoplight:
        id: 5c7k8qcteppiu
      type: object
      properties:
        id:
          type: integer
          x-stoplight:
            id: 1iulgq3l6ajj2
        name:
          type: string
          x-stoplight:
            id: 00jjsmzopt9fc
        target_amount:
          $ref: '#/components/schemas/Decimal'
        start_amount:
          $ref: '#/components/schemas/Decimal'
        category:
          $ref: '#/components/schemas/CategoryBase'
        created_at:
          type: string
          x-stoplight:
            id: 5byf2vogogh92
          format: date
        term:
          type: integer
          x-stoplight:
            id: edgop9kid5rmi
          minimum: 0
        percent:
          type: integer
          x-stoplight:
            id: 5pn7dxmq1hggm
        is_completed:
          type: boolean
          x-stoplight:
            id: m68d1l14irhd8
        expire_date:
          type: string
          x-stoplight:
            id: 2ha24qifv2sgi
          format: date
    GoalTop:
      title: GoalTop
      x-stoplight:
        id: dwr5gxss02koj
      type: object
      properties:
        id:
          type: integer
          x-stoplight:
            id: kl242ykhqv1k9
        name:
          type: string
          x-stoplight:
            id: 700lknhzc4xl3
        target_amount:
          $ref: '#/components/schemas/Decimal'
        start_amount:
          $ref: '#/components/schemas/Decimal'
        category:
          $ref: '#/components/schemas/CategoryBase'
        created_at:
          type: string
          x-stoplight:
            id: 2js6bq1i46jme
          format: date
        term:
          type: integer
          x-stoplight:
            id: c2zu1wbfuaavl
          minimum: 0
        percent:
          type: integer
          x-stoplight:
            id: im9b1ekhqeayw
        is_completed:
          type: boolean
          x-stoplight:
            id: iep23fqhazoap
        expire_date:
          type: string
          x-stoplight:
            id: 8t8dwl1epzesu
          format: date
        percentage_completion:
          type: integer
          x-stoplight:
            id: 8bkav2z1ojq2x
          minimum: 0
          maximum: 100
    Pagination:
      title: Pagination
      x-stoplight:
        id: 7jog9mu4iik5u
      type: object
      properties:
        count:
          type: integer
          x-stoplight:
            id: lunteacg8t3a2
          minimum: 0
        next:
          type: string
          x-stoplight:
            id: an2igpdsflwnc
          format: uri
        previous:
          type: string
          x-stoplight:
            id: 5c5ncj6oa2p39
          format: uri
  requestBodies:
    RegistrationRequestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      required: true
    TokenObtainRequestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
      required: true
    TokenRefreshRequestBody:
      content:
        application/json:
          schema:
            type: object
            properties:
              refresh:
                type: string
      required: true
    TransactionCreateRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionCreate'
      required: true
    CategoryCreateRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoryCreate'
    GoalCreateRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GoalCreate'
          examples: {}
    GoalRefillRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GoalRefill'
  responses:
    Registration201:
      description: Created
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
              email:
                type: string
    Registration400:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: array
                items:
                  type: string
                  example: Пользователь с таким именем уже существует.
              email:
                type: array
                items:
                  type: string
                  example: Пользователь с таким Email уже существует.
    TokenObtain200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              refresh:
                type: string
                description: refresh token
              access:
                type: string
                description: access token
    TokenObtain400:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: No active account found with the given credentials
    TokenRefresh400:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: Token is invalid or expired
              code:
                type: string
                example: token_not_valid
    UsersMe200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
    TransactionsList200:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Pagination'
              - type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/TransactionRetrieve'
    Transactions200:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionRetrieve'
    TransactionCreate400:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              amount:
                type: array
                items:
                  type: string
                  example: 'Убедитесь, что это значение больше либо равно 0.01.'
              category:
                type: array
                items:
                  type: string
                  example: У пользователя нет такой категории
              transaction_type:
                type: array
                items:
                  type: string
    TransactionGlobal200:
      description: Success
      content:
        application/json:
          schema:
            type: object
            properties:
              total_income:
                $ref: '#/components/schemas/Decimal'
              total_expenses:
                $ref: '#/components/schemas/Decimal'
    CategoriesList200:
      description: Success
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CategoryBase'
    Categories200:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoryBase'
    CategoryCreate400:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: array
                items:
                  type: string
                  example: У пользоваетля уже существует категория с таким названием и типом
    CategoriesWithExpensesList200:
      description: Success
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Pagination'
              - type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/CategoryWithExpensesSums'
    Unauthorized:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
                example: Данный токен недействителен для любого типа токена
              code:
                type: string
                example: token_not_valid
              messages:
                type: array
                items:
                  type: object
                  properties:
                    token_class:
                      type: string
                      example: AccessToken
                    token_type:
                      type: string
                      example: access
                    message:
                      type: string
                      example: Токен недействителен или просрочен
    ExpensesByCategories200:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              count:
                type: integer
              next:
                nullable: true
              previous:
                nullable: true
              results:
                type: array
                items:
                  type: object
                  properties:
                    category:
                      type: string
                    transactions_sum:
                      $ref: '#/components/schemas/Decimal'
    TransactionBalance200:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              balance:
                $ref: '#/components/schemas/Decimal'
    TopCategories200:
      description: Example response
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CategoryWithExpensesSums'
    PermissionDenied:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: string
          examples:
            Example 1:
              value:
                detail: string
    Goals200:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GoalRetrieve'
    GoalsList200:
      description: Example response
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Pagination'
              - type: object
                properties:
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/GoalRetrieve'
    CategoryWithExpenses200:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoryWithExpensesSums'
    GoalsCreate400:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: array
                items:
                  type: string
              target_amount:
                type: array
                items:
                  type: string
              start_amount:
                type: array
                items:
                  type: string
              term:
                type: array
                items:
                  type: string
              percent:
                type: array
                items:
                  type: string
    GoalRefill200:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
              goal:
                $ref: '#/components/schemas/GoalRetrieve'
              amount:
                $ref: '#/components/schemas/Decimal'
    GoalRefill400:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              goal:
                type: array
                items:
                  type: string
              amount:
                type: array
                items:
                  type: string
    GoalComplete400:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              goal_id:
                type: array
                items:
                  type: string
    GoalAnalyze200:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              active_goals:
                type: integer
                x-stoplight:
                  id: zzn9kelgzet27
                minimum: 0
                description: Количество незавершенных целей
              most_closest_goal:
                type: integer
                x-stoplight:
                  id: 4thl0w2kojsvj
                description: Количество дней до самой ближайшей цели
              total_active_balance:
                $ref: '#/components/schemas/Decimal'
              total_percents_amount:
                $ref: '#/components/schemas/Decimal'
              percents_amount_cur_month:
                $ref: '#/components/schemas/Decimal'
              most_succesful_category:
                $ref: '#/components/schemas/CategoryBase'
              most_popular_category:
                $ref: '#/components/schemas/CategoryBase'
    GoalDashboard200:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              total_income:
                $ref: '#/components/schemas/Decimal'
              total_expenses:
                $ref: '#/components/schemas/Decimal'
              total_percents:
                $ref: '#/components/schemas/Decimal'
              invested_amount_cur_month:
                $ref: '#/components/schemas/Decimal'
              most_expensive_category:
                $ref: '#/components/schemas/CategoryWithExpensesSums'
    GoalWithout200:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GoalWithout'
    GoalTop200:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GoalTop'